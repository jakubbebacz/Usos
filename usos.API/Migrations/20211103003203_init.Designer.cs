// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using usos.API;

namespace usos.API.Migrations
{
    [DbContext(typeof(UsosDbContext))]
    [Migration("20211103003203_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("usos.API.Entities.DegreeCourse", b =>
                {
                    b.Property<Guid>("DegreeCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("degree_course_id");

                    b.Property<string>("DegreeCourseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("degree_course_name");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("department_id");

                    b.HasKey("DegreeCourseId")
                        .HasName("pk_degree_course");

                    b.HasIndex("DepartmentId")
                        .HasDatabaseName("ix_degree_course_department_id");

                    b.ToTable("degree_course");

                    b.HasData(
                        new
                        {
                            DegreeCourseId = new Guid("ceef9633-26d0-484c-b4ca-5302067c7bd6"),
                            DegreeCourseName = "Architecture",
                            DepartmentId = new Guid("11d45e9e-fa19-4d4a-9cac-8045ab9631e3")
                        },
                        new
                        {
                            DegreeCourseId = new Guid("de4c8442-f363-4872-988f-003840303158"),
                            DegreeCourseName = "ComputerScience",
                            DepartmentId = new Guid("81ff6218-af8f-4e6e-b18b-1f17461e2a88")
                        });
                });

            modelBuilder.Entity("usos.API.Entities.Department", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("department_id");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("department_name");

                    b.HasKey("DepartmentId")
                        .HasName("pk_department");

                    b.ToTable("department");

                    b.HasData(
                        new
                        {
                            DepartmentId = new Guid("11d45e9e-fa19-4d4a-9cac-8045ab9631e3"),
                            DepartmentName = "WBiA"
                        },
                        new
                        {
                            DepartmentId = new Guid("81ff6218-af8f-4e6e-b18b-1f17461e2a88"),
                            DepartmentName = "WeAiI"
                        });
                });

            modelBuilder.Entity("usos.API.Entities.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("student_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("first_name");

                    b.Property<int>("IndexNumber")
                        .HasMaxLength(10)
                        .HasColumnType("integer")
                        .HasColumnName("index_number");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("password");

                    b.Property<int?>("Semester")
                        .HasMaxLength(1)
                        .HasColumnType("integer")
                        .HasColumnName("semester");

                    b.HasKey("StudentId")
                        .HasName("pk_student");

                    b.ToTable("student");
                });

            modelBuilder.Entity("usos.API.Entities.DegreeCourse", b =>
                {
                    b.HasOne("usos.API.Entities.Department", "Department")
                        .WithMany("DegreeCourses")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("fk_degree_course_department_department_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("usos.API.Entities.Department", b =>
                {
                    b.Navigation("DegreeCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
